on:
  workflow_call:
    inputs:
      artifacts:
        default: "*.tar.gz"
        description: |
          The path or files of artifacts to upload
        required: false
        type: string

      bucket:
        default: mattermost-plugins-ci/ci/
        description: |
          The S3 bucket full path to upload
        required: false
        type: string

      golangci-lint-version:
        default: "v1.55.2"
        description: |
          Set the version for golangci-lint
        required: false
        type: string

      golang-version:
        default: "1.21"
        description: |
          Set the version for golang
        required: false
        type: string

      region:
        default: us-east-2
        description: |
          The AWS region for S3 bucket
        required: false
        type: string
      
      run-scheduled:
        type: boolean
        default: false
        required: false
        description: |
          Permit forked repos to run the workflow in a scheduled context

permissions:
  contents: read

jobs:
  lint:
    if: ${{ github.repository_owner == 'mattermost' || github.event_name != 'schedule' || inputs.run-scheduled }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: ci/setup
        uses: mattermost/actions/plugin-ci/setup@8c02b13d20a7121b0dbec4157c9f70593bad4e8c
        with:
          golangci-lint-version: ${{ inputs.golangci-lint-version }}
          golang-version: ${{ inputs.golang-version }}

      - name: ci/lint
        uses: mattermost/actions/plugin-ci/lint@8c02b13d20a7121b0dbec4157c9f70593bad4e8c

  test:
    if: ${{ github.repository_owner == 'mattermost' || github.event_name != 'schedule' || inputs.run-scheduled }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: ci/setup
        uses: mattermost/actions/plugin-ci/setup@8c02b13d20a7121b0dbec4157c9f70593bad4e8c
        with:
          golang-version: ${{ inputs.golang-version }}

      - name: ci/test
        uses: mattermost/actions/plugin-ci/test@8c02b13d20a7121b0dbec4157c9f70593bad4e8c

  build:
    if: ${{ github.repository_owner == 'mattermost' || github.event_name != 'schedule' || inputs.run-scheduled }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: ci/setup
        uses: mattermost/actions/plugin-ci/setup@8c02b13d20a7121b0dbec4157c9f70593bad4e8c
        with:
          golang-version: ${{ inputs.golang-version }}

      - name: ci/build
        uses: mattermost/actions/plugin-ci/build@8c02b13d20a7121b0dbec4157c9f70593bad4e8c

  delivery:
    if: ${{ github.repository_owner == 'mattermost' && github.event_name != 'schedule' && (github.ref_name  == 'master' || github.ref_name  == 'main') }}
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    steps:
      - name: ci/download-artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3.0.1
        with:
          name: dist
          path: dist

      - name: ci/prepare-artifact
        run: mv *.tar.gz ${GITHUB_REPOSITORY#*/}-ci.tar.gz
        working-directory: dist

      - name: ci/aws-configure
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a #v4.0.1
        with:
          aws-region: ${{ inputs.region }}
          aws-access-key-id: ${{ secrets.PLUGIN_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PLUGIN_AWS_SECRET_ACCESS_KEY }}

      - name: ci/artifact-upload
        shell: bash
        run: |
          aws s3 cp ${{ inputs.artifacts }} s3://${{ inputs.bucket }} --acl public-read --cache-control no-cache
        working-directory: dist
